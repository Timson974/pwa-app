{"version":3,"sources":["components/AudioVisualiser.js","components/AudioAnalyser.js","components/Sound.js","components/FormComponent.js","components/FormContainer.js","components/Chart.js","components/News.js","components/Footer.js","App.js","serviceWorker.js","registerServiceWorker.js","index.js","logo.svg"],"names":["AudioVisualiser","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","canvas","React","createRef","audioData","current","height","width","context","getContext","x","sliceWidth","length","lineWidth","strokeStyle","clearRect","beginPath","moveTo","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","y","value","lineTo","err","return","stroke","draw","react_default","a","createElement","ref","Component","AudioAnalyser","state","Uint8Array","tick","bind","assertThisInitialized","audioContext","window","AudioContext","webkitAudioContext","analyser","createAnalyser","dataArray","frequencyBinCount","source","createMediaStreamSource","audio","connect","rafId","requestAnimationFrame","getByteTimeDomainData","setState","cancelAnimationFrame","disconnect","components_AudioVisualiser","Sound","toggleMicrophone","navigator","mediaDevices","getUserMedia","video","getTracks","forEach","track","stop","stopMicrophone","getMicrophone","className","onClick","components_AudioAnalyser","FormComponent","name","data","Location","onChange","handleChange","placeholder","NoiseLevel","VibrationLevel","Probability","Impact","RiskValue","RiskType","type","checked","isProtected","isAnalysed","isPpeUsed","isWorkStoped","Form","isChanged","countRiskValue","event","_event$target","target","defineProperty","components_FormComponent","Chart","chartData","labels","datasets","label","backgroundColor","es","options","title","display","displayTitle","text","fontSize","legend","displayLegend","position","legendPosition","defaultProps","News","Container","Row","Col","xs","sm","Image","src","Footer","App","logo","alt","href","rel","News_News","FormContainer","components_Sound","components_Chart","components_Footer","Boolean","location","hostname","match","isLocalhost","registerValidSW","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App","document","getElementById","ready","unregister","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","reload","checkValidServiceWorker","registerServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.7c4802be.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass AudioVisualiser extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.canvas = React.createRef();\r\n    }\r\n    draw() {\r\n        const { audioData } = this.props;\r\n        const canvas = this.canvas.current;\r\n        const height = canvas.height;\r\n        const width = canvas.width;\r\n        const context = canvas.getContext('2d');\r\n        let x = 0;\r\n        const sliceWidth = (width * 1.0) / audioData.length;\r\n\r\n        context.lineWidth = 2;\r\n        context.strokeStyle = '#000000';\r\n        context.clearRect(0, 0, width, height);\r\n\r\n        context.beginPath();\r\n        context.moveTo(0, height / 2);\r\n\r\n        for (const item of audioData) {\r\n            const y = (item / 255.0) * height;\r\n            context.lineTo(x, y);\r\n            x += sliceWidth;\r\n        }\r\n        context.lineTo(x, height / 2);\r\n        context.stroke();\r\n    }\r\n    componentDidUpdate() {\r\n        this.draw();\r\n    }\r\n    render() {\r\n        return <canvas width=\"300\" height=\"300\" ref={this.canvas} />;\r\n        \r\n    }\r\n}\r\n\r\nexport default AudioVisualiser;","import React, { Component } from 'react';\r\nimport AudioVisualiser from './AudioVisualiser';\r\n\r\nclass AudioAnalyser extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { audioData: new Uint8Array(0) };\r\n        this.tick = this.tick.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.audioContext = new (window.AudioContext ||\r\n            window.webkitAudioContext)();\r\n        this.analyser = this.audioContext.createAnalyser();\r\n        this.dataArray = new Uint8Array(this.analyser.frequencyBinCount);\r\n        this.source = this.audioContext.createMediaStreamSource(this.props.audio);\r\n        this.source.connect(this.analyser);\r\n        this.rafId = requestAnimationFrame(this.tick);\r\n    }\r\n    tick() {\r\n        this.analyser.getByteTimeDomainData(this.dataArray);\r\n        this.setState({ audioData: this.dataArray });\r\n        this.rafId = requestAnimationFrame(this.tick);\r\n    }\r\n    componentWillUnmount() {\r\n        cancelAnimationFrame(this.rafId);\r\n        this.analyser.disconnect();\r\n        this.source.disconnect();\r\n    }\r\n    render() {\r\n\r\n        return <AudioVisualiser audioData={this.state.audioData} />;\r\n    }\r\n}\r\n\r\nexport default AudioAnalyser;","import React, { Component } from 'react';\r\nimport AudioAnalyser from './AudioAnalyser';\r\n\r\n\r\nclass Sound extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            audio: null\r\n        };\r\n        this.toggleMicrophone = this.toggleMicrophone.bind(this);\r\n    }\r\n    async getMicrophone() {\r\n        const audio = await navigator.mediaDevices.getUserMedia({\r\n            audio: true,\r\n            video: false\r\n        });\r\n        this.setState({ audio });\r\n    }\r\n    stopMicrophone() {\r\n        this.state.audio.getTracks().forEach(track => track.stop());\r\n        this.setState({ audio: null });\r\n    }\r\n    toggleMicrophone() {\r\n        if (this.state.audio) {\r\n            this.stopMicrophone();\r\n        } else {\r\n            this.getMicrophone();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Sound\">\r\n                <fieldset><legend>Noise & Vibration Measurement</legend>\r\n                    <main>\r\n                        <div className=\"controls\">\r\n                            <button onClick={this.toggleMicrophone}>\r\n                                {this.state.audio ? 'Stop Measurement' : 'Measure Noise & Vibration Level'}\r\n                            </button>\r\n                        </div>\r\n                        {this.state.audio ? <AudioAnalyser audio={this.state.audio} /> : 'risk: high, medium, low'}\r\n                    </main>\r\n                </fieldset>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Sound","import React from \"react\"\r\n\r\nfunction FormComponent(props) {\r\n    return (\r\n        <main>\r\n            <form>\r\n                <fieldset className=\"research\"\r\n                >\r\n                    <legend>Research Area</legend>\r\n\r\n                    <input\r\n                        name=\"Location\"\r\n                        value={props.data.Location}\r\n                        onChange={props.handleChange}\r\n                        placeholder=\"Location\"\r\n                    />\r\n                    <br />\r\n\r\n                    <input\r\n                        name=\"NoiseLevel\"\r\n                        value={props.data.NoiseLevel}\r\n                        onChange={props.handleChange}\r\n                        placeholder=\"Noise Level\"\r\n                    />\r\n                    <br />\r\n\r\n                    <input\r\n                        name=\"VibrationLevel\"\r\n                        value={props.data.VibrationLevel}\r\n                        onChange={props.handleChange}\r\n                        placeholder=\"Vibration Level\"\r\n                    />\r\n                    <br />\r\n                    <input\r\n                        name=\"Probability\"\r\n                        value={props.data.Probability}\r\n                        onChange={props.handleChange}\r\n                        placeholder=\"Probability\"\r\n                    />\r\n                    <br />\r\n                    <input\r\n                        name=\"Impact\"\r\n                        value={props.data.Impact}\r\n                        onChange={props.handleChange}\r\n                        placeholder=\"Impact\"\r\n                    />\r\n                    <br />\r\n                    <input\r\n                        name=\"RiskValue\"\r\n                        value={props.data.RiskValue}\r\n                        onChange={props.handleChange}\r\n                        placeholder=\"Risk Value\"\r\n                    />\r\n                    <br />\r\n                    <input\r\n                        name=\"RiskType\"\r\n                        value={props.data.RiskType}\r\n                        onChange={props.handleChange}\r\n                        placeholder=\"Risk type\"\r\n                    />\r\n                </fieldset>\r\n                <br />\r\n                <fieldset>\r\n                    <legend>Noise and Vibration Value</legend>\r\n                    <label>\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"RiskType\"\r\n                            value=\"Very Low\"\r\n                            checked={props.data.RiskType === \"Very Low\"}\r\n                            onChange={props.handleChange}\r\n                        /> 0-39 (dB) = [0-0.33] (m/s2)\r\n    </label>\r\n                    <br />\r\n                    <label>\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"RiskType\"\r\n                            value=\"Low\"\r\n                            checked={props.data.RiskType === \"Low\"}\r\n                            onChange={props.handleChange}\r\n                        /> 40-50 (dB) = [0.34-0.99] (m/s2)\r\n    </label>\r\n                    <br />\r\n                    <label>\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"RiskType\"\r\n                            value=\"Medium\"\r\n                            checked={props.data.RiskType === \"Medium\"}\r\n                            onChange={props.handleChange}\r\n                        /> 51-65 (dB) = [1.0-1.98] (m/s2)\r\n    </label>\r\n                    <br />\r\n                    <label>\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"RiskType\"\r\n                            value=\"High\"\r\n                            checked={props.data.RiskType === \"High\"}\r\n                            onChange={props.handleChange}\r\n                        /> 66-90 (dB) = [1.99-2.97] (m/s2)\r\n    </label>\r\n                    <br />\r\n                    <label>\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"RiskType\"\r\n                            value=\"Very High\"\r\n                            checked={props.data.RiskType === \"Very High\"}\r\n                            onChange={props.handleChange}\r\n                        /> 91-140(dB) = [2.98-3.30] (m/s2)\r\n    </label>\r\n                    <br />\r\n                </fieldset>\r\n                <br />\r\n                <fieldset>\r\n                    <legend>Quantitative Risk Analysis (Probability * Impact)</legend>\r\n                    <select\r\n                        value={props.data.Probability}\r\n                        name=\"Probability\"\r\n                        onChange={props.handleChange}\r\n                    >\r\n                        <option value=\"\">---Please choose Probability value---</option>\r\n                        <option value=\"1\">1.Very High</option>\r\n                        <option value=\"2\">2.High</option>\r\n                        <option value=\"3\">3.Medium</option>\r\n                        <option value=\"4\">4.Low</option>\r\n                        <option value=\"5\">5.Very Low</option>\r\n\r\n                    </select>\r\n                    <select\r\n                        value={props.data.Impact}\r\n                        name=\"Impact\"\r\n                        onChange={props.handleChange}\r\n                    >\r\n                        <option value=\"\">---Please choose Noise Impact value---</option>\r\n                        <option value=\"1\">1.No injuries</option>\r\n                        <option value=\"2\">2.Trouble of communicating</option>\r\n                        <option value=\"3\">3.Mental health problem</option>\r\n                        <option value=\"4\">4.Cardiovascular issues</option>\r\n                        <option value=\"5\">5.Hearing loss</option>\r\n\r\n                    </select>\r\n                    <br />\r\n                    <select\r\n                        value={props.data.Impact}\r\n                        name=\"Impact\"\r\n                        onChange={props.handleChange}\r\n                    >\r\n                        <option value=\"\">---Please choose HAV Impact value---</option>\r\n                        <option value=\"1\">1.No injuries</option>\r\n                        <option value=\"2\">2.Muscle and joint damage in the hands and arms</option>\r\n                        <option value=\"3\">3.Sensory nerve damage</option>\r\n                        <option value=\"4\">4.Carpel tunnel syndrome</option>\r\n                        <option value=\"5\">5.\"White fingers\"</option>\r\n\r\n                    </select>\r\n                    <br />\r\n                    <label>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            name=\"isProtected\"\r\n                            onChange={props.handleChange}\r\n                            checked={props.data.isProtected}\r\n                        /> 1-2\r\n    </label>\r\n                    <br />\r\n                    <label>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            name=\"isProtected\"\r\n                            onChange={props.handleChange}\r\n                            checked={props.data.isProtected}\r\n                        /> 3-4\r\n    </label>\r\n                    <br />\r\n                    <label>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            name=\"isAnalysed\"\r\n                            onChange={props.handleChange}\r\n                            checked={props.data.isAnalysed}\r\n                        /> 5-9\r\n    </label>\r\n                    <br />\r\n                    <label>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            name=\"isPpeUsed\"\r\n                            onChange={props.handleChange}\r\n                            checked={props.data.isPpeUsed}\r\n                        /> 10-15\r\n    </label>\r\n                    <br />\r\n                    <label>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            name=\"isWorkStoped\"\r\n                            onChange={props.handleChange}\r\n                            checked={props.data.isWorkStoped}\r\n                        /> 16-25\r\n    </label>\r\n                </fieldset>\r\n            </form>\r\n            <hr />\r\n            <fieldset>\r\n                <legend>Qualitative Risk Analysis</legend>\r\n\r\n                <p>UWL Location: {props.data.Location}</p>\r\n                <p>Measured Noise Level: {props.data.NoiseLevel} (dB)</p>\r\n                <p>Measured Vibration Level: {props.data.VibrationLevel} (m/s2)</p>\r\n                <p>Probability: {props.data.Probability}</p>\r\n                <p>Impact: {props.data.Impact}</p>\r\n                <p>Risk Value: {props.data.RiskValue}</p>\r\n                <p>Risk Type: {props.data.RiskType}</p>\r\n\r\n                <hr />\r\n                <p>Risk Analysis: </p>\r\n                <p>Area Protected:   {props.data.isProtected ? \"Yes\" : \"No\"}</p>\r\n                <p>Use PPE: {props.data.isAnalysed ? \"Yes\" : \"No\"}</p>\r\n                <p>Change equipment: {props.data.isPpeUsed ? \"Yes\" : \"No\"}</p>\r\n                <p>Stop work: {props.data.isWorkStoped ? \"Yes\" : \"No\"}</p>\r\n            </fieldset>\r\n        </main>\r\n    )\r\n}\r\nexport default FormComponent","import React, { Component } from \"react\"\r\nimport FormComponent from \"./FormComponent\"\r\n\r\n\r\nclass Form extends Component {\r\n\r\n    state = {\r\n        Location: \"\",\r\n        NoiseLevel: \"\",\r\n        VibrationLevel: \"\",\r\n        Probability: \"\",\r\n        Impact: \"\",\r\n        RiskValue: \"\",\r\n        RiskType: \"\",\r\n        isProtected: false,\r\n        isChanged: false,\r\n        isPpeUsed: false,\r\n        isWorkStoped: false\r\n    }\r\n\r\n\r\n    countRiskValue = () => {\r\n        if (0 <= this.state.RiskValue <= 2) {\r\n            return 'Very Low'\r\n        } else if (3 <= this.state.RiskValue <= 4) {\r\n            return 'Low'\r\n        } else if (5 <= this.state.RiskValue <= 9) {\r\n            return 'Medium'\r\n        } else if (10 <= this.state.RiskValue <= 15) {\r\n            return 'High'\r\n        } else {\r\n            return 'Very High'\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const { name, value, type, checked } = event.target\r\n        type === \"checkbox\" ?\r\n            this.setState({\r\n                [name]: checked\r\n            })\r\n            :\r\n            this.setState({\r\n                [name]: value\r\n            })\r\n    }\r\n    render() {\r\n        return (\r\n            <FormComponent\r\n                handleChange={this.handleChange}\r\n                data={this.state}\r\n            />\r\n        )\r\n    }\r\n}\r\nexport default Form","import React, { Component } from 'react'\r\nimport { Bar, Line, Pie } from 'react-chartjs-2'\r\n\r\nclass Chart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            chartData: {\r\n                labels: [\r\n                    '1.Library, level 1', '2.Library, level 2', '3.Library, level 3', '4.Printing Area, Street', '5.Classroom, floor 3', '6.Canteen', '7.Back yard'\r\n                ],\r\n                datasets: [\r\n                    {\r\n                        label: 'Risk Value',\r\n                        data: [\r\n                            20, 9, 5, 22, 15, 12, 18\r\n                        ],\r\n                        backgroundColor: [\r\n                            'rgba(255, 99, 132, 0.6)',\r\n                            'rgba(54, 162, 235, 0.6)',\r\n                            'rgba(75, 192, 192, 0.6)',\r\n                            'rgba(153, 102, 255, 0.6)',\r\n                            'rgba(255, 159, 64, 0.6)',\r\n                            'rgba(255, 79, 130, 0.6)',\r\n                            'rgba(250, 100, 32, 0.6)',\r\n                            'rgba(255, 99, 132, 0.6)'\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    }\r\n\r\n    static defaultProps = {\r\n        displayTitle: true,\r\n        displayLegend: true,\r\n        legendPosition: 'right'\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <fieldset><legend>Results & Analysis</legend>\r\n                    <form className=\"chart\">\r\n                        <Bar\r\n                            data={this.state.chartData}\r\n                            options={{\r\n                                title: {\r\n                                    display: this.props.displayTitle,\r\n                                    text: 'Bar view: Risk Analysis of Noise and Vibration',\r\n                                    fontSize: 15\r\n                                },\r\n                                legend: {\r\n                                    display: this.props.displayLegend,\r\n                                    position: this.props.legendPosition\r\n                                }\r\n                            }}\r\n                        />\r\n                        <Line\r\n                            data={this.state.chartData}\r\n                            options={{\r\n                                title: {\r\n                                    display: this.props.displayTitle,\r\n                                    text: 'Line view: Risk Analysis of Noise and Vibration',\r\n                                    fontSize: 15\r\n                                },\r\n                                legend: {\r\n                                    display: this.props.displayLegend,\r\n                                    position: this.props.legendPosition\r\n                                }\r\n                            }}\r\n                        />\r\n                        <Pie\r\n                            data={this.state.chartData}\r\n                            options={{\r\n                                title: {\r\n                                    display: this.props.displayTitle,\r\n                                    text: 'Pie view: Risk Analysis of Noise and Vibration',\r\n                                    fontSize: 15\r\n                                },\r\n                                legend: {\r\n                                    display: this.props.displayLegend,\r\n                                    position: this.props.legendPosition\r\n                                }\r\n                            }}\r\n                        />\r\n                    </form>\r\n                </fieldset>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Chart\r\n","import React, { Component } from 'react'\r\nimport { Container, Row, Col, Image } from 'react-bootstrap';\r\nimport './News.css'\r\n\r\nexport default class News extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <h2>Project Info</h2>\r\n                    <Row>\r\n                        <Col xs={12} sm={8} className=\"main-section\">\r\n                            <p>The project focuses on how risk value affects to the productivity of IT users</p>\r\n                            <p>The project areas are the Library levels 1,2,3, the Printing area, Street, others</p>\r\n                            <p>During the project development the PWA, quantitative risk analysis (QRA) and </p>\r\n                            <p>qualitative factor risk analysis (QFRA) were developed for UWL facilities</p>\r\n                        </Col>\r\n                        <Col xs={12} sm={4} className=\"sidebar-selection\">\r\n                            <Image src=\"assets/Timur Utepov.png\" width=\"280\" />\r\n                            <p>Developer</p>\r\n                        </Col>\r\n                        <h2>Project Method</h2>\r\n                        <Col xs={12} sm={8} className=\"main-section\">\r\n                            <p>The project methododology are the Prototyping, Waterfall and Risk assessment</p>\r\n                            <p>The development method is a risk value calculation, where probability and impact </p>\r\n                            <p>The method for the PWA development is React.js</p>\r\n                        </Col>\r\n                        <Col xs={12} sm={4} className=\"sidebar-selection\">\r\n                            <Image src=\"assets/risk-analysis.png\" width=\"280\" />\r\n                            <p>Risk Analysis matrix</p>\r\n                        </Col>\r\n                        <h2>Project Measurement and Control</h2>\r\n                        <Col xs={12} sm={8} className=\"main-section\">\r\n                            <p>Tools for the measurement were chosen as a Noise meter and Vibration meter</p>\r\n                            <p>The developed sensor based on analysing and visualising sound data</p>\r\n                            <p>The measured data compared with OHS standards for offices and promises</p>\r\n                        </Col>\r\n                        <Col xs={12} sm={4} className=\"sidebar-selection\">\r\n                            <Image src=\"assets/noise-2.jpg\" width=\"280\" />\r\n                            <p>Noise and Vibration control equipment</p>\r\n                        </Col>\r\n                        <h2>Project Recommendation</h2>\r\n                        <Col xs={12} sm={8} className=\"main-section\">\r\n                            <p>The personal protective equipment was recommended for decrease noise impact</p>\r\n                            <p>A isolation of noise and vibration materials were advised to avoid vibration impact</p>\r\n                            <p>To increase the distance from source of noise and vibtation exposure were advised</p>\r\n                        </Col>\r\n                        <Col xs={12} sm={4} className=\"sidebar-selection\">\r\n                            <Image src=\"assets/ppe-2.jpg\" width=\"280\" />\r\n                            <p>Noise and Vibration PPE equipment</p>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"navbar\"><h2>copywrited by Utepov Timur, 2019</h2>\r\n            \r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Sound from \"./components/Sound\";\nimport Form from \"./components/FormContainer\";\nimport Chart from \"./components/Chart\";\nimport News from \"./components/News\";\nimport Footer from \"./components/Footer\";\n\n\nfunction App () {\n  \n  return (\n   \n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Project - Utepov Timur\n        </p>\n          <a\n            className=\"App-link\"\n            href=\"https://react-risk-analysis.stackblitz.io\" alt=\"pwa\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            This PWA about Risk Analysis of Noise and Vibration exposure\n        </a>\n        </header>\n      <News />\n      <Form />\n      <Sound />\n      <Chart />\n      <Footer />\n    </div>\n    \n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Lets check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not local host. Just register service worker\r\n                registerValidSW(swUrl);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the old content will have been purged and\r\n                            // the fresh content will have been added to the cache.\r\n                            // It's the perfect time to display a \"New content is\r\n                            // available; please refresh.\" message in your web app.\r\n                            console.log('New content is available; please refresh.');\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            if (\r\n                response.status === 404 ||\r\n                response.headers.get('content-type').indexOf('javascript') === -1\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\nregisterServiceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}